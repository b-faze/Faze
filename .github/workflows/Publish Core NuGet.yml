# This is a basic workflow to help you get started with Actions

name: Publish Faze.Core NuGet

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
    paths: [ 'src/libraries/Faze.Core/Faze.Core/Faze.Core.csproj' ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Publish NuGet
        # You may pin to the exact commit or the version.
        # uses: brandedoutcast/publish-nuget@c12b8546b67672ee38ac87bea491ac94a587f7cc
        uses: brandedoutcast/publish-nuget@v2.5.5
        with:
          # Filepath of the project to be packaged, relative to root of repository
          PROJECT_FILE_PATH: ./src/libraries/Faze.Core/Faze.Core/Faze.Core.csproj
          NUGET_KEY: ${{secrets.NUGET_KEY}}

      - name: Setup .NET Core @ Latest
        uses: actions/setup-dotnet@v1
        with:
          source-url: https://nuget.pkg.github.com/b-faze/index.json
        env:
          NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Build solution and generate NuGet package
        run: |  
          cd src/libraries/Faze.Core/Faze.Core
          dotnet build -c Release
          
      - name: Push generated package to GitHub registry
        run: dotnet nuget push src/libraries/Faze.Core/Faze.Core/bin/Release/*.nupkg --skip-duplicate --no-symbols true
