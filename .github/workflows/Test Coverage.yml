# This is a basic workflow to help you get started with Actions

name: Test Coverage

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
    paths:
    - 'src/libraries/**/*'
    - 'src/examples/games/**/*'
  pull_request:
    branches: [ master ]
    paths:
    - 'src/libraries/**/*'
    - 'src/examples/games/**/*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  test-netcore3:
  # The type of runner that the job will run on
    runs-on: ubuntu-latest

    strategy:
      matrix:
        test:
        - 'src/libraries/Faze.Rendering/Faze.Rendering.Tests'

    steps:
        - uses: actions/checkout@v2
        - name: Setup .NET Core SDK 3.1.x
          uses: actions/setup-dotnet@v1.7.2
          with:
            dotnet-version: '3.1.x'
        - name: Install dependencies
          run: dotnet restore "${{ matrix.test }}"
        - name: Build
          run: dotnet build "${{ matrix.test }}" --configuration Release --no-restore
        - name: Test
          run: dotnet test "${{ matrix.test }}" --no-restore --verbosity normal --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=lcov
          continue-on-error: true
        - name: move-coverage
          run: find "${{ matrix.test }}/TestResults/" -type f -print0 | xargs -0 mv -t "${{ matrix.test }}/TestResults"
        # You may pin to the exact commit or the version.
        # uses: coverallsapp/github-action@9ba913c152ae4be1327bfb9085dc806cedb44057
        - name: Coveralls GitHub Action
          uses: coverallsapp/github-action@1.1.3
          with:
            github-token: ${{ secrets.GITHUB_TOKEN }}
            # Path to lcov file
            path-to-lcov: '${{ matrix.test }}/TestResults/coverage.info'
            flag-name: run-${{ matrix.test }}
            parallel: true

  test-net5:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    strategy:
      matrix:
        test:
        - 'src/libraries/Faze.Abstractions/Faze.Abstractions.Tests'
        - 'src/libraries/Faze.Core/Faze.Core.Tests'
        - 'src/libraries/Faze.Core.IO/Faze.Core.IO.Tests'
        - 'src/libraries/Faze.Engine/Faze.Engine.Tests'
        - 'src/libraries/Faze.Rendering.Video.FFMPEG'
        - 'src/examples/games/Faze.Examples.Games.Tests'

    steps:
        - uses: actions/checkout@v2
        - name: Setup .NET Core SDK 5.0.x
          uses: actions/setup-dotnet@v1.7.2
          with:
            dotnet-version: '5.0.x'
        - name: Install dependencies
          run: dotnet restore "${{ matrix.test }}"
        - name: Build
          run: dotnet build "${{ matrix.test }}" --configuration Release --no-restore
        - name: Test
          run: dotnet test "${{ matrix.test }}" --no-restore --verbosity normal --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=lcov
          continue-on-error: true
        - name: move-coverage
          run: find "${{ matrix.test }}/TestResults/" -type f -print0 | xargs -0 mv -t "${{ matrix.test }}/TestResults"
        # You may pin to the exact commit or the version.
        # uses: coverallsapp/github-action@9ba913c152ae4be1327bfb9085dc806cedb44057
        - name: Coveralls GitHub Action
          uses: coverallsapp/github-action@1.1.3
          with:
            github-token: ${{ secrets.GITHUB_TOKEN }}
            # Path to lcov file
            path-to-lcov: '${{ matrix.test }}/TestResults/coverage.info'
            flag-name: run-${{ matrix.test }}
            parallel: true
            
  finish:
    needs: 
    - test-netcore3
    - test-net5
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls Finished
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.github_token }}
        parallel-finished: true
